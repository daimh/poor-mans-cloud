#!/usr/bin/env bash
set -Eeuo pipefail
VERBOSE=""
trap "exit 1" TERM
function helpme() {
	if [ $# -gt 0 ]
	then
		echo -e "$1" 1>&2
	else
		grep '#' /proc/$$/fd/255 | sed -n '/^#HELPME_START/,/^#HELPME_END/p' | grep -v "^#HELPME_" | sed -e "s/#//" | tr -s '\t' 1>&2 #20220612
	fi
	kill -s TERM -- -$(cut -d ' ' -f 5 /proc/$$/stat)
}
HELPME_FUNC=$(type helpme | tail -n +2)
function element_in_array() {
	local e match="$1"
	shift
	for e
	do
		[[ "$e" == "$match" ]] && return 0
	done
	return 1
}
function delete_vm_from_pm() {
	ssh -T $2 << EOF
$VERBOSE
if virsh dominfo $1 &> /dev/null
then
	virsh destroy $1
	virsh undefine $1
fi
if drbdadm status $1 &> /dev/null
then
	drbdadm down $1
fi
if lvdisplay $VG_NAME/$1 &> /dev/null
then
	lvchange -an $VG_NAME/$1
	lvremove $VG_NAME/$1
fi
if [ -f /etc/drbd.d/$1.res ]
then
	echo rm /etc/drbd.d/$1.res
	rm /etc/drbd.d/$1.res
fi
exit 0
EOF
}
function get_pm_vm_list() {
	HELPME_FUNC=$(type helpme | tail -n +2)
	for PM in ${PM_LIST[@]}
	do
		ssh -T $PM << EOF
$VERBOSE
$HELPME_FUNC
virsh list --all |tail -n +3| sed "/^$/d; s/shut off/shutoff/" |cut -c 7- | while read VM STAT
do
	[ -f /etc/drbd.d/\$VM.res ] || helpme "ERR-2401: \$VM is still defined on host $PM, but no such a drbd drvice exists"
	DRBD=\$(drbdadm status \$VM 2> /dev/null | grep "^  disk:" | cut -c 8-)
	VID=\$(grep "device /dev/drbd" /etc/drbd.d/\$VM.res | sed -e "s/.* minor //; s/;//")
	MEM=\$(virsh dominfo \$VM |grep "Max memory" |sed -e "s/\s\s*/ /g" |cut -d " " -f 3)
	echo -e "\$VM\t\$STAT\t$PM\t\$DRBD\t\$VID\t\$MEM"
done
exit 0
EOF
done
}
