#!/usr/bin/env bash
. /etc/pmc.conf
OPTS=$(getopt -o hv --long help,version -n "$(basename $0)" -- "$@")
eval set -- "$OPTS"
while [ $# -gt 0 ]
do
	case "$1" in
#@ HELP_START
#@ NAME
#@ 	pmc-vm-ls - list all VMs
#@ SYNOPSIS
#@ 	pmc-vm-ls [OPTION]...
#@ EXAMPLE
#@ 	pmc-vm-ls
#@ DESCRIPTION
		-h | --help)	#@ display help and exit
			die ;;
		--version)	#@ display version and exit
			die 20250731 ;;
		-v)	#@ verbose output
			VERBOSE="set -x"
			$VERBOSE
			shift ;;
		--)
			shift ;;
		*)
			break ;;
#@ AUTHOR
#@ 	Manhong Dai, manhongdai@gmail.com
#@ COPYRIGHT
#@ 	Copyright Â© 2022 Free Software Foundation, Inc. License GPLv3+: GNU
#@ 	GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
#@ 	This is free software: you are free to change and redistribute it.
#@ 	There is NO WARRANTY, to the extent permitted by law.
#@ HELP_END
	esac
done
if [ $# -ne 0 ]
then
	die "ERR-4002: use -h/--help"
fi
get_pm_vm_list | sort -t '	' -k 1,1 | python -c "
import sys
def print_vm(lst):
	if len(lst) == 0: return
	running = '-'
	vid = None
	for fs in lst:
		if fs[1] == 'running':
			running = fs[2]
		if vid is None:
			vid = fs[4]
		elif vid != fs[4]:
			raise Exception('ERR-4003')
	print(lst[0][0], lst[0][4], running, '\t'.join(['%s:%s:%d' % (fs[2], fs[3], int(fs[5])/1048576) for fs in lst]), sep='\t')

def main():
	print('VM', 'VID', 'AT', 'PM:DRBD:MEM(G)...', sep='\t')
	vm, lst = None, []
	for ln in sys.stdin:
		fs = ln[:-1].split('\t')
		if fs[0] != vm:
			print_vm(lst)
			vm, lst = fs[0], []
		lst.append(fs)
	print_vm(lst)
if __name__ == '__main__':
	main()
" | column -t
