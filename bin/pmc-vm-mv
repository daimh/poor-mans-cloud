#!/usr/bin/env bash
. /etc/pmc.conf
function move_vm() {
	VM=$1
	for PM in ${PM_LIST[@]}
	do
		read TMP STATE < <( ssh -n $PM "virsh dominfo $VM 2>/dev/null |grep \"^State:\"; exit 0" ) || continue
		if [ "$STATE" = "running" ]
		then
			PRIMARY=$PM
		elif [ "$STATE" = "shut off" ]
		then
			SECONDARY=$PM
		fi
	done
	[ "$PRIMARY" != "" ] || helpme "ERR-6003: no such an active VM $VM"
	[ "$SECONDARY" != "" ] || helpme "ERR-6004: This VM is not created on two PMs"
	if ! ssh -T $SECONDARY << EOF
		$VERBOSE
		set -Eeuo pipefail
		drbdadm primary $VM
		[ "\$(drbdadm status $VM | grep disk:UpToDate | wc -l)" = "2" ]
EOF
	then
		helpme "ERR-6005: This VM's drbd is not in a normal status"
	fi
	echo "#Live Migrating $VM from $PRIMARY to $SECONDARY"
	if ssh -n $PRIMARY virsh migrate --live $VM qemu+ssh://$SECONDARY/system
	then
		ssh -n $PRIMARY drbdadm secondary $VM
	else
		ssh -n $SECONDARY drbdadm secondary $VM
	fi
}

OPTS=$(getopt -o hv --long help,version -n "$(basename $0)" -- "$@")
eval set -- "$OPTS"
while [ $# -gt 0 ]
do
	case "$1" in
#HELPME_START
#NAME
#	pmc-vm-mv - move VM to another PM
#SYNOPSIS
#	pmc-vm-mv [OPTION]... VM...
#EXAMPLE
#	pmc-vm-mv wsus
#DESCRIPTION
		-h | --help) #display help and exit
			helpme ;;
		--version)	#display version and exit
			helpme 20220918 ;;
		-v)	#verbose output
			VERBOSE="set -x"
			$VERBOSE
			shift ;;
		--)
			shift
			break ;;
		*)
			break ;;
#AUTHOR
#	Manhong Dai, manhongdai@gmail.com
#COPYRIGHT
#	Copyright Â© 2022 Free Software Foundation, Inc. License GPLv3+: GNU
#	GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
#	This is free software: you are free to change and redistribute it.
#	There is NO WARRANTY, to the extent permitted by law.
#HELPME_END
	esac
done
if [ $# -eq 0 ]
then
	helpme "ERR-6001: use -h/--help"
fi
for VM in $@
do
	move_vm $VM
done
